{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/employees-details/employees-details.component.css","webpack:///./src/app/components/employees-details/employees-details.component.html","webpack:///./src/app/components/employees-details/employees-details.component.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/filter/filter.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Employee } from './shared/Employee/employee';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  API_URL = 'https://fakerestapi.azurewebsites.net';\n\n  constructor(private httpClient: HttpClient) {}\n\n  getBookCategoryList(){\n    return this.httpClient.get(`${this.API_URL}/api/Books`);\n  }\n\n\n\n  // Employee service function\n  // ---------------------------------------------------------------------------------\n  API_EMP_URL = 'http://dummy.restapiexample.com/api/v1';\n\n  // Get all employee data\n  getEmpList(){\n    return this.httpClient.get<Employee[]>(this.API_EMP_URL+ '/employees');\n  }\n\n  // \tGet a single employee data\n  getIdEmpList(id: string) {\n    return this.httpClient.get<Employee>(this.API_EMP_URL+ '/employee/' + id );\n  }\n\n  // Create new record in database\n  createEmpList(employee: Employee ) {\n    return this.httpClient.post(this.API_EMP_URL + '/create', employee);\n  }\n\n  //Update an employee record\n  updateEmpList(employee: Employee) {\n    return this.httpClient.put(this.API_EMP_URL + '/update', employee);\n  }\n\n  //Delete an employee record\n  deleteEmpList(id: string) {\n    return this.httpClient.delete(this.API_EMP_URL + '/delete/' + id );\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng2-slim-loading-bar color=\\\"red\\\"></ng2-slim-loading-bar>\\n<nav class=\\\"navbar navbar-expand-md bg-info navbar-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Sample Demo</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Create Ad Units\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"index\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          All Ad Units\\n        </a>\\n      </li>\\n      <!-- Dropdown -->\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbardrop\\\" data-toggle=\\\"dropdown\\\">\\n          Employee\\n        </a>\\n        <div class=\\\"dropdown-menu\\\">\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"list\\\">List Employee</a>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"addEmp\\\">Add Employee</a>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"EditEmp\\\">Edit Employee</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\nimport {\n  NavigationCancel,\n  Event,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router\n} from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\nconstructor(private _loadingBar: SlimLoadingBarService, private _router: Router){\n  this._router.events.subscribe((event: Event) => {\n    this.navigationInterceptor(event);\n  });\n}\n\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\nimport { AppComponent } from './app.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { EmployeesDetailsComponent } from './components/employees-details/employees-details.component';\nimport { FilterPipe } from './filter/filter.pipe';\n\n\n\nconst routes: Routes = [\n\t{ path: '', component: IndexComponent },\n\t{ path: 'create', component: CreateComponent },\n\t{ path: 'edit/:id', component: EditComponent },\n\t{ path: 'index', component: IndexComponent },\n\t{ path: 'list', component: EmployeesDetailsComponent },\n];\n\n@NgModule({\n\tdeclarations: [AppComponent, CreateComponent, IndexComponent, EditComponent, EmployeesDetailsComponent, FilterPipe],\n\timports: [BrowserModule, RouterModule.forRoot(routes), SlimLoadingBarModule, HttpClientModule, FormsModule],\n\tproviders: [],\n\tbootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","module.exports = \"\"","module.exports = \"<!-- main app container -->\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h3>Angular 6 Template-Driven Form Validation</h3>\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"firstName\\\">First Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"model.firstName\\\" #firstName=\\\"ngModel\\\"\\n            [ngClass]=\\\"{ 'is-invalid': f.submitted && firstName.invalid }\\\" required />\\n          <div *ngIf=\\\"f.submitted && firstName.invalid\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"firstName.errors.required\\\">First Name is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lastName\\\">Last Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"model.lastName\\\" #lastName=\\\"ngModel\\\"\\n            [ngClass]=\\\"{ 'is-invalid': f.submitted && lastName.invalid }\\\" required />\\n          <div *ngIf=\\\"f.submitted && lastName.invalid\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"lastName.errors.required\\\">Last Name is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\"\\n            required email />\\n          <div *ngIf=\\\"f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n            <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\n            [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required minlength=\\\"6\\\" />\\n          <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n            <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-primary\\\">Register</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent {\n\n  model: any = {};\n\n  onSubmit() {\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.model))\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"clearfix\\\">\\n  <span class=\\\"float-left\\\">\\n    <h2>\\n      Employee Records\\n    </h2>\\n  </span>\\n  <span class=\\\"float-right\\\">\\n    <pre>Total Records : {{getEmpList.length}}</pre></span>\\n</div>\\n<hr>\\n\\n\\n<table class=\\\"shadow table table-outer-bordered table-active table-striped table-sm\\\">\\n  <thead>\\n    <tr>\\n      <th>Id</th>\\n      <th>Name</th>\\n      <th>Salary</th>\\n      <th>Age</th>\\n      <th class=\\\"float-right\\\">Profile Image</th>\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let list of getEmpList\\\">\\n      <td>{{ list.id }}</td>\\n      <td>{{ list.employee_name }}</td>\\n      <td>{{ list.employee_salary }}</td>\\n      <td>{{ list.employee_age }}</td>\\n      <td>\\n        <i class=\\\"fa fa-edit\\\"></i>\\n      </td>\\n<td class=\\\"float-right\\\">\\n<button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteUser(list)\\\"> Delete</button>\\n<button class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"editUser(list)\\\" style=\\\"margin-left: 20px;\\\"> Edit</button></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { Employee } from './../../shared/Employee/employee';\nimport { ApiService } from './../../api.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n        selector: 'app-employees-details',\n        templateUrl: './employees-details.component.html',\n        styleUrls: ['./employees-details.component.css']\n})\n\nexport class EmployeesDetailsComponent implements OnInit {\n\n        // public variable declarations\n        public page = 1;\n\n        // Private variable declarations\n        private getEmpList: Employee[] = [];\n\n\n        // Public constructor\n        constructor(private service: ApiService) { }\n        ngOnInit() {\n                this.service.getEmpList()\n                .subscribe(data => {\n                        this.getEmpList = data;\n                });\n               \n        }\n\n        // Delete the record from the api\n        deleteUser(emp: Employee): void {\n                this.service.deleteEmpList(emp.id)\n                        .subscribe(data => {\n                                this.getEmpList = this.getEmpList.filter(u => u !== emp);\n                        });\n        };\n\n        editUser(user: Employee): void {\n                localStorage.removeItem(\"editUserId\");\n                localStorage.setItem(\"editUserId\", user.id.toString());\n                //this.router.navigate(['edit-user']);\n        };\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Toggleable Tabs</h2>\\n<br>\\n<!-- Nav tabs -->\\n<ul class=\\\"nav nav-tabs\\\">\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\">Tables</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#menu1\\\">List</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#menu2\\\">Carousel</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#menu3\\\">Book Category</a>\\n  </li>\\n</ul>\\n\\n<!-- Tab panes -->\\n<div class=\\\"tab-content\\\">\\n  <div id=\\\"home\\\" class=\\\"container tab-pane active\\\"><br>\\n    <h2>Table Head Colors</h2>\\n    <p>The .thead-dark class adds a black background to table headers, and the .thead-light class adds a grey\\n      background to\\n      table headers:</p>\\n    <table class=\\\"table table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>Firstname</th>\\n          <th>Lastname</th>\\n          <th>Email</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>John</td>\\n          <td>Doe</td>\\n          <td>john@example.com</td>\\n        </tr>\\n        <tr>\\n          <td>Mary</td>\\n          <td>Moe</td>\\n          <td>mary@example.com</td>\\n        </tr>\\n        <tr>\\n          <td>July</td>\\n          <td>Dooley</td>\\n          <td>july@example.com</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div id=\\\"menu2\\\" class=\\\"container tab-pane fade\\\"><br>\\n    <h2>Carousel</h2>\\n    <div id=\\\"myCarousel\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n\\n      <!-- Indicators -->\\n      <ul class=\\\"carousel-indicators\\\">\\n        <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n        <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"1\\\"></li>\\n        <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"2\\\"></li>\\n      </ul>\\n\\n      <!-- The slideshow -->\\n      <div class=\\\"carousel-inner\\\">\\n        <div class=\\\"carousel-item active\\\">\\n          <img src=\\\"https://www.w3schools.com/bootstrap4/la.jpg\\\" alt=\\\"Los Angeles\\\" width=\\\"1100\\\" height=\\\"500\\\">\\n        </div>\\n        <div class=\\\"carousel-item\\\">\\n          <img src=\\\"https://www.w3schools.com/bootstrap4/chicago.jpg\\\" alt=\\\"Chicago\\\" width=\\\"1100\\\" height=\\\"500\\\">\\n        </div>\\n        <div class=\\\"carousel-item\\\">\\n          <img src=\\\"https://www.w3schools.com/bootstrap4/ny.jpg\\\" alt=\\\"New York\\\" width=\\\"1100\\\" height=\\\"500\\\">\\n        </div>\\n      </div>\\n\\n      <!-- Left and right controls -->\\n      <a class=\\\"carousel-control-prev\\\" href=\\\"#myCarousel\\\" data-slide=\\\"prev\\\">\\n        <span class=\\\"carousel-control-prev-icon\\\"></span>\\n      </a>\\n      <a class=\\\"carousel-control-next\\\" href=\\\"#myCarousel\\\" data-slide=\\\"next\\\">\\n        <span class=\\\"carousel-control-next-icon\\\"></span>\\n      </a>\\n    </div>\\n  </div>\\n  <div id=\\\"menu1\\\" class=\\\"container tab-pane fade\\\"><br>\\n    <h3>Html form </h3>\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email address:</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"pwd\\\">Password:</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"pwd\\\">\\n      </div>\\n      <div class=\\\"form-group form-check\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"> Remember me\\n        </label>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </form>\\n  </div>\\n  <div id=\\\"menu3\\\" class=\\\"container tab-pane fade\\\"><br>\\n\\n\\n    <div class=\\\"clearfix shadow-lg p-2 mb-4 bg-warning\\\">\\n      <span class=\\\"float-left\\\">\\n        <span class=\\\"font-weight-bold\\\">Book Category List</span>\\n      </span>\\n      <span class=\\\"float-right\\\">\\n        <span class=\\\"badge  badge-primary p-2\\\">{{getBkList.length}}</span>\\n      </span>\\n    </div>\\n\\n\\n    <input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"search text goes here\\\">\\n    <table class=\\\"table table-striped table-condensed table-outer-bordered\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Title</th>\\n          <th>PageCount</th>\\n          <th>Description</th>\\n          <th>Excerpt</th>\\n          <th>PublishDate</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let list of getBkList | filter : searchText\\\">\\n          <td> {{ list.ID }} </td>\\n          <td> {{ list.Title }} </td>\\n          <td> {{ list.PageCount }}</td>\\n          <td>\\n            <textarea class=\\\"form-control\\\" rows=\\\"5\\\" id=\\\"comment\\\" name=\\\"text\\\" readonly resized=\\\"false\\\">{{ list.Description }}</textarea>\\n          </td>\\n          <td>\\n            <textarea class=\\\"form-control\\\" rows=\\\"5\\\" id=\\\"comment\\\" name=\\\"text\\\" readonly>{{ list.Excerpt }}</textarea></td>\\n          <td> {{ list.PublishDate | date:'EEEE, MMMM d, y, h:mm:ss a' }} </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../api.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\n\n\nexport class IndexComponent implements OnInit {\n\n  private getBkList: Array<object> = [];\n  constructor(private apiService:ApiService) { }\n  ngOnInit() {\n    this.getBookCategory();\n  }\n\n  public getBookCategory() {\n    this.apiService.getBookCategoryList().subscribe((data: Array<object>) => {  \n     this.getBkList = data;\n    });\n  }\n}\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(items: any, searchText: string): any {\n    if(!items) return[];\n        if(!searchText) return items;\n\n        searchText = searchText.toLowerCase();\n\n        return items.filter(it => {\n          for (var keys in it) {\n            return it[keys].toString().toLowerCase().includes(searchText);\n          }\n        });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}